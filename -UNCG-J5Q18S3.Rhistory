pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup() %>%
#group_by(Transect, Frame) %>%
#mutate(relcov=abs_cover/sum(abs_cover)) %>%
#mutate(class=ifelse(Lifeform=="Woody"&abs_cover>50, 1, 0))%>%
#filter(class==1)%>%
#select(Transect, Frame, class) %>%
#unique()
ggplot(data=subset(pre_class, Lifeform=="Woody"), aes(x=Frame, y=abs_cover))+
geom_point()+
#  geom_line()+
facet_wrap(~Transect)
ggplot(data=subset(pre_class, Lifeform=="Woody"), aes(x=Frame, y=abs_cover))+
geom_point()+
#  geom_line()+
facet_wrap(~as.factor(Transect))
ggplot(data=subset(pre_class, Lifeform=="Woody"), aes(x=Frame, y=abs_cover))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
View(pre_class)
plotcat<-plotslist%>%
left_join(pre_class) %>%
mutate(category=ifelse(is.na(class), "grassy", 'woody')) %>%
rename(transect=Transect,
plot=Frame)
View(pre_class)
pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup() %>%
#group_by(Transect, Frame) %>%
#mutate(relcov=abs_cover/sum(abs_cover)) %>%
#mutate(class=ifelse(Lifeform=="Woody"&abs_cover>50, 1, 0))%>%
#filter(class==1)%>%
#select(Transect, Frame, class) %>%
#unique()
ggplot(data=subset(pre_class, Lifeform %in% c("Woody","Graminoid")), aes(x=Frame, y=abs_cover, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
ggplot(data=subset(pre_class, Lifeform %in% c("Woody","Graminoid")), aes(x=Frame, y=abs_cover, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%  ## KW changed it back because identifying woody plots is problematic using actual cover
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup()
pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%  ## KW changed it back because identifying woody plots is problematic using actual cover
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup() %>%
group_by(Transect, Frame) %>%
mutate(relcov=abs_cover/sum(abs_cover)) %>%
mutate(class=ifelse(Lifeform=="Woody"&abs_cover>50, 1, 0))%>%
filter(class==1)%>%
select(Transect, Frame, class) %>%
unique()
ggplot(data=subset(pre_class, Lifeform %in% c("Woody")), aes(x=Frame, y=abs_cover, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%  ## KW changed it back because identifying woody plots is problematic using actual cover
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup() %>%
group_by(Transect, Frame) %>%
mutate(relcov=abs_cover/sum(abs_cover)) %>%
mutate(class=ifelse(Lifeform=="Woody"&abs_cover>50, 1, 0))%>%
filter(class==1)%>%
select(Transect, Lifeform, Frame, class) %>%
unique()
ggplot(data=subset(pre_class, Lifeform %in% c("Woody")), aes(x=Frame, y=abs_cover, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
testing <- pre_class %>%
spread(key=Lifeform, value=abs_cover) %>%
replace(is.na(.),0)
# Data frame identifying pre-burn grass versus woody states
plotcat<-plotslist%>%
left_join(pre_class) %>%
mutate(category=ifelse(is.na(class), "grassy", 'woody')) %>%
rename(transect=Transect,
plot=Frame) %>%
select(-class)
View(plotcat)
pre_class<-pre %>%  ## I changed this to actual covers because the cover classes are not linear so calculating relcov with them doesn't work
left_join(lf) %>%  ## KW changed it back because identifying woody plots is problematic using actual cover
filter(Lifeform!="Drop")%>%
rename(Transect=Trasect) %>%
group_by(Transect, Frame, Lifeform) %>%
left_join(cover_class_key, by="Cover_class") %>%
summarize(abs_cover=sum(abs_cover)) %>%
ungroup() %>%
group_by(Transect, Frame) %>%
mutate(relcov=abs_cover/sum(abs_cover)) %>%
mutate(class=ifelse(Lifeform=="Woody"&abs_cover>50, 1, 0))
View(pre_class)
ggplot(data=subset(pre_class, Lifeform %in% c("Woody")), aes(x=Frame, y=relcover, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
ggplot(data=subset(pre_class, Lifeform %in% c("Woody")), aes(x=Frame, y=relcov, col=Lifeform))+
geom_point()+
geom_path()+
facet_wrap(~as.factor(Transect))
#how do classes differ in bareground?
bg<-bareground%>%
left_join(plotcat)
boxplot(bg$Abundance~bg$category)
summary(aov(Abundance~category, data = bg))#no sig diff
species_key <- read.csv("KNZ_species_list.csv") %>%##meghan changed this slightly.
mutate(Genus_Species = paste(genus, species, sep="_")) %>%
bind_rows(data.frame(code=551, gen="quincu", spec="lobata", genus="quincula", species="lobata", family="solanaceae",
growthform="p", lifeform="f",origin="n", photo="unkn", Genus_Species="quincula_lobata")) %>%
bind_rows(data.frame(code=552, gen="penste", spec="spp", genus="penstemon", species="spp", family="acanthaceae", # we should probably figure this one out and fix this
growthform="unkn", lifeform="f",origin="unkn", photo="unkn", Genus_Species="penstemon_spp")) %>%
bind_rows(data.frame(code=553, gen="solida", spec="spp", genus="solidago", species="spp", family="asteraceae", # we should probably figure this one out and fix this
growthform="unkn", lifeform="f",origin="unkn", photo="unkn", Genus_Species="solidago_spp"))
spcomp_2018 <- read.csv("Species_Comp_k20a_before.csv") %>%
left_join(cover_class_key, by="Cover_class") %>%
dplyr::select(-Cover) %>%
rename(Transect = Trasect) %>%
mutate(Genus_Species = tolower(Genus_Species)) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="helianthis_annuas", "helianthus_annuus")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="rubus_spp", "rubus_occidentalis")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="rosa_spp", "rosa_arkansana")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="triaga_betonicifolia", "tragia_betonicifolia")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="mimosa_nuttallii", "mimosa_quadrivalvis")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="quincula_lobata", "quincula_lobata")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="erechtites_hieraciifolius", "erechtites_hieraciifolia")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="tridus_flavus", "tridens_flavus")) %>%
left_join(dplyr::select(species_key, Genus_Species, code), by="Genus_Species") %>%
rename(sp_code = code, Plot=Frame, Genus_Species_clean=Genus_Species) %>%
filter(!Genus_Species_clean %in% c("rock","bare_ground","litter_herbeceous","litter_woody")) %>%
mutate(Year=2018) %>%
dplyr::select(Year, Transect, Plot, sp_code, Genus_Species_clean, abs_cover)
species_key <- read.csv("KNZ_species_list.csv") %>%##meghan changed this slightly.
mutate(Genus_Species = paste(genus, species, sep="_")) %>%
bind_rows(data.frame(code=551, gen="quincu", spec="lobata", genus="quincula", species="lobata", family="solanaceae",
growthform="p", lifeform="f",origin="n", photo="unkn", Genus_Species="quincula_lobata")) %>%
bind_rows(data.frame(code=552, gen="penste", spec="spp", genus="penstemon", species="spp", family="acanthaceae", # we should probably figure this one out and fix this
growthform="unkn", lifeform="f",origin="unkn", photo="unkn", Genus_Species="penstemon_spp")) %>%
bind_rows(data.frame(code=553, gen="solida", spec="spp", genus="solidago", species="spp", family="asteraceae", # we should probably figure this one out and fix this
growthform="unkn", lifeform="f",origin="unkn", photo="unkn", Genus_Species="solidago_spp"))
spcomp_2018 <- read.csv("Species_Comp_k20a_before.csv") %>%
left_join(cover_class_key, by="Cover_class") %>%
dplyr::select(-Cover) %>%
rename(Transect = Trasect) %>%
mutate(Genus_Species = tolower(Genus_Species)) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="helianthis_annuas", "helianthus_annuus")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="rubus_spp", "rubus_occidentalis")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="rosa_spp", "rosa_arkansana")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="triaga_betonicifolia", "tragia_betonicifolia")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="mimosa_nuttallii", "mimosa_quadrivalvis")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="quincula_lobata", "quincula_lobata")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="erechtites_hieraciifolius", "erechtites_hieraciifolia")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="tridus_flavus", "tridens_flavus")) %>%
left_join(dplyr::select(species_key, Genus_Species, code), by="Genus_Species") %>%
rename(sp_code = code, Plot=Frame, Genus_Species_clean=Genus_Species) %>%
filter(!Genus_Species_clean %in% c("rock","bare_ground","litter_herbeceous","litter_woody")) %>%
mutate(Year=2018) %>%
dplyr::select(Year, Transect, Plot, sp_code, Genus_Species_clean, abs_cover)
## Check for missing species
spcomp_2018 %>% filter(is.na(sp_code))
### 2019 data
missing_spcode_2019 <- read.csv("Woody removal plots_K20A_Konza2019_200702_partial.csv") %>%
rename(Genus_Species=Species) %>%
mutate(Genus_Species = tolower(sub(" ", "_", Genus_Species))) %>%
dplyr::select(Num_ID, Genus_Species) %>% unique() %>% filter(Num_ID=="")
spcomp_2019 <-  read.csv("Woody removal plots_K20A_Konza2019_200702_partial.csv") %>%
rename(Genus_Species=Species, Year = "ï..Year", Plot=Plot..Frame.) %>%
mutate(Genus_Species = tolower(sub(" ", "_", Genus_Species))) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="liatris", "liatris_punctata")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="symphoricarpos", "symphoricarpos_orbiculatus")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="koleria_pyramidata", "koeleria_macrantha")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="ulmus", "ulmus_americana")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="lespedeza_virginica", "lespedeza_cuneata")) %>% ### Not positive but this could be lespedeza cuneata, which is on KNZ species list
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="pennstemon_sp", "penstemon_spp")) %>%
mutate(Num_ID = replace(Num_ID, Num_ID=="KW PIC", "")) %>%
mutate(Num_ID = as.numeric(Num_ID)) %>%
left_join(dplyr::select(species_key, Genus_Species, code), by="Genus_Species") %>%
rename(sp_code = code) %>%
mutate(Num_ID = ifelse(Num_ID=="", sp_code, Num_ID)) %>%
filter(!is.na(Num_ID)) %>%
dplyr::select(-sp_code, -Notes) %>%
rename(sp_code = Num_ID) %>%
left_join(
dplyr::select(species_key, Genus_Species, code) %>%
rename(Genus_Species_clean=Genus_Species),
by=c("sp_code"="code")) %>%
filter(!is.na(Genus_Species_clean)) %>%
group_by(Year, Transect, Plot, sp_code, Genus_Species_clean) %>%
summarize(June=max(June), August=max(August)) %>%
ungroup() %>%
mutate(abs_cover = pmax(June, August)) %>%
dplyr::select(Year, Transect, Plot, sp_code, Genus_Species_clean, abs_cover)
spcomp_2019 <-  read.csv("Woody removal plots_K20A_Konza2019_200702_partial.csv")
spcomp_2019 <-  read.csv("Woody removal plots_K20A_Konza2019_200702_partial.csv") %>%
rename(Genus_Species=Species, Plot=Plot..Frame.) %>%
mutate(Genus_Species = tolower(sub(" ", "_", Genus_Species))) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="liatris", "liatris_punctata")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="symphoricarpos", "symphoricarpos_orbiculatus")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="koleria_pyramidata", "koeleria_macrantha")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="ulmus", "ulmus_americana")) %>%
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="lespedeza_virginica", "lespedeza_cuneata")) %>% ### Not positive but this could be lespedeza cuneata, which is on KNZ species list
mutate(Genus_Species = replace(Genus_Species, Genus_Species=="pennstemon_sp", "penstemon_spp")) %>%
mutate(Num_ID = replace(Num_ID, Num_ID=="KW PIC", "")) %>%
mutate(Num_ID = as.numeric(Num_ID)) %>%
left_join(dplyr::select(species_key, Genus_Species, code), by="Genus_Species") %>%
rename(sp_code = code) %>%
mutate(Num_ID = ifelse(Num_ID=="", sp_code, Num_ID)) %>%
filter(!is.na(Num_ID)) %>%
dplyr::select(-sp_code, -Notes) %>%
rename(sp_code = Num_ID) %>%
left_join(
dplyr::select(species_key, Genus_Species, code) %>%
rename(Genus_Species_clean=Genus_Species),
by=c("sp_code"="code")) %>%
filter(!is.na(Genus_Species_clean)) %>%
group_by(Year, Transect, Plot, sp_code, Genus_Species_clean) %>%
summarize(June=max(June), August=max(August)) %>%
ungroup() %>%
mutate(abs_cover = pmax(June, August)) %>%
dplyr::select(Year, Transect, Plot, sp_code, Genus_Species_clean, abs_cover)
### 2021 data
missing_spcode_2021 <- read.csv("Woody removal plots_K20A_Konza2021.csv") %>%
rename(Genus_Species=Species) %>%
mutate(Genus_Species = tolower(sub(" ", "_", Genus_Species))) %>%
dplyr::select(Num_ID, Genus_Species) %>% unique() %>% filter(Num_ID=="")
### set up workspace
library(tidyverse)
Ratibida <- c(rnorm(35, mean = 0.2, sd=0.05),
rnorm(20, mean = 0.45, sd=0.05),
rnorm(45, mean = 0.85, sd=0.05)
)
Echinaceae <- c(rnorm(35, mean = 0.15, sd=0.05),
rnorm(20, mean = 0.15, sd=0.05),
rnorm(45, mean = 0.7, sd=0.05)
)
time_vec <- 1:100
ratibida <- c(rnorm(35, mean = 0.2, sd=0.05),
rnorm(20, mean = 0.45, sd=0.05),
rnorm(45, mean = 0.85, sd=0.05)
)
echinaceae <- c(rnorm(35, mean = 0.15, sd=0.05),
rnorm(20, mean = 0.15, sd=0.05),
rnorm(45, mean = 0.7, sd=0.05)
)
bouteloua <- c(rnorm(35, mean = 0.85, sd=0.02),
rnorm(20, mean = 0.5, sd=0.05),
rnorm(45, mean = 0.1, sd=0.01)
)
echinacea <- c(rnorm(35, mean = 0.15, sd=0.05),
rnorm(20, mean = 0.15, sd=0.05),
rnorm(45, mean = 0.7, sd=0.05)
)
sim_df <- data.frame(Year = time_vec,
echin_abun = echinacea,
ratib_abun = ratibida,
boute_abun = bouteloua)
sim_df <- data.frame(Year = time_vec,
echang = echinacea,
ratcol = ratibida,
bouhir = bouteloua) %>%
pivot_longer(cols=echang:bouhir, names_to="Species", values_to = "Abundance")
library(ggthemes)
ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
c(1:100*(-.1)+.9+runif(100, min=0, max=0.05))
c(1:100*(-.01)+.9+runif(100, min=0, max=0.05))
c(1:100*(-.008)+.9+runif(100, min=0, max=0.05))
bouteloua <- c(1:100*(-.008)+.9+runif(100, min=0, max=0.05))
sim_df <- data.frame(Year = time_vec,
echang = echinacea,
ratcol = ratibida,
bouhir = bouteloua) %>%
pivot_longer(cols=echang:bouhir, names_to="Species", values_to = "Abundance")
ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
echinacea <- c(rnorm(70, mean = 0.15, sd=0.05),
rnorm(5, mean = 0.5, sd=0.05),
rnorm(25, mean = 0.7, sd=0.05)
)
ratibida <- c(rnorm(35, mean = 0.2, sd=0.05),
rnorm(20, mean = 0.45, sd=0.05),
rnorm(45, mean = 0.85, sd=0.05)
)
echinacea <- c(rnorm(70, mean = 0.05, sd=0.01),
rnorm(5, mean = 0.5, sd=0.05),
rnorm(25, mean = 0.7, sd=0.05)
)
bouteloua <- c(1:100*(-.008)+.9+runif(100, min=0, max=0.05))
sim_df <- data.frame(Year = time_vec,
echang = echinacea,
ratcol = ratibida,
bouhir = bouteloua) %>%
pivot_longer(cols=echang:bouhir, names_to="Species", values_to = "Abundance")
ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
### Simulate data
time_vec <- 2001:2100
sim_df <- data.frame(Year = time_vec,
echang = echinacea,
ratcol = ratibida,
bouhir = bouteloua) %>%
pivot_longer(cols=echang:bouhir, names_to="Species", values_to = "Abundance")
ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
file.choose()
setwd("C:\\Users\\K_WILCOX\\OneDrive - UNCG\\PredictiveEcolLab\\Lab logo\\")
sim_plot <- ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
sim_plot <- ggplot(sim_df, aes(x=Year, y=Abundance, col=Species)) + geom_path(width=2) + theme_few()
pdf("sim_fig.pdf", width=4, height=2, useDingbats = F)
print(sim_plot)
dev.off()
file.choose()
setwd("C:\\Users\\k_wilcox\\OneDrive - UNCG\\Current projects\\Konza projects_other\\ShrubRecolonization\\")
### Read in data
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv")
rm(list=ls())
setwd("C:\\Users\\k_wilcox\\OneDrive - UNCG\\Current projects\\Konza projects_other\\ShrubRecolonization\\")
### Read in data
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv")
View(spcomp_df)
splist <- read.csv("KNZ_species_list.csv")
### Read in data
splist <- read.csv("KNZ_species_list.csv") %>%
rename(sp_code=code)
library(tidyverse)
library(ggthemes)
### Read in data
splist <- read.csv("KNZ_species_list.csv") %>%
rename(sp_code=code)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code")
unique(spcomp_df$growthform)
unique(spcomp_df$lifeform)
spcomp_df %>% filter(lifeform=="s")
spcomp_df %>% filter(lifeform=="m")
spcomp_df %>% filter(lifeform=="o")
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody")))
)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
)
unique(spcomp_df$fxn_group)
spcomp_df[is.na(spcomp_df$fxn_group),]
### Read in data
splist <- read.csv("KNZ_species_list.csv") %>%
rename(sp_code=code)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
)
unique(spcomp_df$fxn_group)
library(vegan)
abun_rich_df <- spcomp_df %>%
group_by(year, transect, plot, cover, shrubSp, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(abs_cover)
)
abun_rich_df <- spcomp_df %>%
group_by(year, transect, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(abs_cover)
)
View(abun_rich_df)
abun_rich_df <- spcomp_df %>%
group_by(year, transect, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
View(abun_rich_df)
abun_rich_full_df <- spcomp_df %>%
group_by(year, transect, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
abun_rich_plot_df <- spcomp_df %>%
group_by(year, transect, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
SE_function<-function(x,na.rm=na.rm){
SD = sd(x,na.rm=TRUE)
denom = sqrt(length(x[!is.na(x)]))
SE=SD/denom
return(SE)
}
topo_key <- read.csv("topo_key.csv")
unique(topo_key$topo)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
) %>%
left_join(topo_key, by="transect")
abun_rich_plot_df <- spcomp_df %>%
group_by(year, transect, topo, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
ggplot(abun_rich_plot_df, aes(x=year, y=abs_cover, col=topo)) %>%
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover)
ggplot(abun_rich_plot_df, aes(x=year, y=abs_cover, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover)
ggplot(abun_rich_plot_df, aes(x=year, y=abs_cover, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover) +
theme_few
ggplot(abun_rich_plot_df, aes(x=year, y=abs_cover, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover) +
theme_few()
ggplot(abun_rich_plot_df, aes(x=year, y=richness, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover) +
theme_few()
abun_rich_df %>% filter(richness>40)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
) %>%
left_join(topo_key, by="transect") %>%
mutate(abs_cover = replace(abs_cover, abs_cover==0, NA))
abun_rich_plot_df <- spcomp_df %>%
group_by(year, transect, topo, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
ggplot(abun_rich_plot_df, aes(x=year, y=richness, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover) +
theme_few()
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
) %>%
left_join(topo_key, by="transect") %>%
mutate(abs_cover = replace(abs_cover, abs_cover==0, NA))
abun_rich_df %>% filter(richness>40)
abun_rich_plot_df %>%
filter(year==2019&transect==1 & plot==1)
spcomp_df <- read.csv("species_compositon_allyears_Feb2024.csv") %>%
left_join(splist, by="sp_code") %>%
mutate(fxn_group = ifelse(lifeform %in% c("f", "m", "o"), "forb",
ifelse(lifeform %in% c("g", "s"), "graminoid",
ifelse(lifeform=="w", "woody", NA)))
) %>%
left_join(topo_key, by="transect") %>%
mutate(abs_cover = replace(abs_cover, abs_cover==0, NA)) %>%
filter_at(vars(abs_cover), all_vars(!is.na(.)))
abun_rich_plot_df <- spcomp_df %>%
group_by(year, transect, topo, plot, cover, shrubSP, fxn_group) %>%
summarize(
abs_cover = sum(abs_cover),
richness = specnumber(genus_species)
)
abun_rich_plot_df %>%
filter(year==2019&transect==1 & plot==1)
ggplot(abun_rich_plot_df, aes(x=year, y=richness, col=topo)) +
geom_jitter(width=0.2) +
facet_wrap(~fxn_group*cover) +
theme_few()
ggplot(abun_rich_plot_df, aes(x=year, y=richness, col=topo)) +
geom_jitter(width=0.2, alpha=0.5) +
facet_wrap(~fxn_group*cover) +
theme_few()
